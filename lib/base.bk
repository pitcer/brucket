(static module base
  (public constant + add)

  (public function add |arguments...|
    (iterate_arithmetic
      0 arguments
      (-> |first second|
        (internal add first second))))

  (public constant - subtract)

  (public function subtract |arguments...|
    (if (is_null arguments)
      0
      (subtract_list
        (pair_first arguments)
        (pair_second arguments))))

  (function subtract_list |argument remaining|
    (if (is_null remaining)
      (internal subtract 0 argument)
      (iterate_arithmetic
        argument remaining
        (-> |first second|
          (internal subtract first second)))))

  (public constant * multiply)

  (public function multiply |arguments...|
    (iterate_arithmetic
      1 arguments
      (-> |first second|
        (internal multiply first second))))

  (public constant / divide)

  (public function divide |arguments...|
    (if (is_null arguments)
      1
      (divide_list
        (pair_first arguments)
        (pair_second arguments))))

  (function divide_list |argument remaining|
    (if (is_null remaining)
      (internal divide 1 argument)
      (iterate_arithmetic
        argument remaining
        (-> |first second|
          (internal divide first second)))))

  (function iterate_arithmetic |accumulator arguments operation|
    (if (is_null arguments)
      accumulator
      (iterate_arithmetic
        (operation
          accumulator
          (pair_first arguments))
        (pair_second arguments)
        operation)))

  (public constant % remainder)

  (public function remainder |first second|
    (internal remainder first second))

  (public constant = is_equal)

  (public function is_equal |first second|
    (internal is_equal first second))

  (public constant > is_greater)

  (public function is_greater |first second|
    (internal is_greater first second))

  (public constant >= is_greater_or_equal)

  (public function is_greater_or_equal |first second|
    (internal is_greater_or_equal first second))

  (public constant < is_less)

  (public function is_less |first second|
    (internal is_less first second))

  (public constant <= is_less_or_equal)

  (public function is_less_or_equal |first second|
    (internal is_less_or_equal first second))

  (public constant not negate)

  (public constant ! negate)

  (public function negate |argument|
    (if argument
      false
      true))

  (public function new_pair |first second|
    (internal pair_new first second))

  (public constant car pair_first)

  (public function pair_first |pair|
    (internal pair_first pair))

  (public constant cdr pair_first)

  (public function pair_second |pair|
    (internal pair_second pair))

  (public constant null? is_null)

  (public function is_null |nullable|
    (is_equal null nullable))

  (public lazy function and |arguments...|
    (and_iterate arguments))

  (function and_iterate |arguments|
    (if (is_null arguments)
      true
      (if (not ((pair_first arguments)))
        false
        (and_iterate (pair_second arguments)))))

  (public lazy function or |arguments...|
    (or_iterate arguments))

  (function or_iterate |arguments|
    (if (is_null arguments)
      false
      (if ((pair_first arguments))
        true
        (or_iterate (pair_second arguments)))))
)
